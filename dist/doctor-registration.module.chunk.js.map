<<<<<<< HEAD
{"version":3,"sources":["/home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration-routing.module.ts","/home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.component.html","/home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.component.scss","/home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.component.ts","/home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.module.ts","/home/hunter/Documents/smart-health/src/assets/images/Caduceus-On-Blue-Star-Of-Life.png","/home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.component.js","/home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.module.js","/home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/search-filter.pipe.js","/home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/index.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF,wCAAwC,wBAAwB,EAAE;AAClE;AACA;AACA,oHAAoH,iBAAiB,EAAE;AACvI;AACA;AACA,0FAA0F,sDAAsD,EAAE;AAClJ,+EAA+E,iBAAiB,EAAE;AAClG;AACA;AACA;AACA;AACA,gFAAgF,wEAAwE,EAAE;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,sBAAsB,EAAE;AACpH,0HAA0H,sBAAsB,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2EAA2E,EAAE;AACvI,mDAAmD,8DAA8D,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,sBAAsB,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,qEAAqE,EAAE;AACpJ,6DAA6D,2CAA2C,EAAE;AAC1G;AACA;AACA;AACA;AACA,6EAA6E,0EAA0E,EAAE;AACzJ,2DAA2D,4BAA4B,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,sCAAsC,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA,wEAAwE,wBAAwB,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wCAAwC,oBAAoB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oCAAoC,kBAAkB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,kBAAkB,EAAE;AAClF;AACA,wEAAwE,mCAAmC,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yGAAyG,+CAA+C,EAAE;AAC1J;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA,oPAAoP,SAAS,gZAAgZ,cAAc,wQAAwQ,2BAA2B,mgBAAmgB,sEAAsE,iIAAiI,YAAY,kBAAkB,yKAAyK,sEAAsE,qIAAqI,YAAY,oBAAoB,mKAAmK,4BAA4B,4FAA4F,2BAA2B,iPAAiP,+BAA+B,gmBAAgmB,4OAA4O,eAAe,iCAAiC,eAAe;AAC3gH,6BAA6B,4BAA4B,kBAAkB,yBAAyB,yBAAyB,mBAAmB,sBAAsB,yBAAyB;AAC/L;AACA,aAAa,IAAI;AACjB;AACA;AACA,kDAAkD;AAClD,KAAK,2EAAoB;AACzB,KAAK,6EAAqB;AAC1B,KAAK,8FAAiC;AACtC,KAAK,gFAAyB;AAC9B,EAAE;AACF;AACA,iBAAiB,qEAAc;AAC/B,kBAAkB,qEAAc;AAChC,eAAe,qEAAc;AAC7B,kBAAkB,qEAAc;AAChC,2BAA2B,qEAAc;AACzC,+BAA+B,sEAAe;AAC9C,wBAAwB,sEAAe;AACvC,wBAAwB,sEAAe;AACvC,iBAAiB,sEAAe;AAChC,mBAAmB,sEAAe;AAClC,oBAAoB,sEAAe;AACnC,kBAAkB,sEAAe;AACjC,iBAAiB,2HAAoE,GAAG,gIAAyE;AACjK;AACA,8C;;;;;;;;;;;;;;ACze8B;AACI;AACX;AACJ;AACW;AAC9B;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,wDAAwD,WAAW;AACnE,2C;;;;;;;;;;ACpBe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC,EAAE,mCAAmC,yCAAyC,qCAAqC,EAAE,EAAE,EAAE,iCAAiC,wCAAwC,sCAAsC,EAAE,EAAE;AAC7T;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE,8C;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA,iC","file":"doctor-registration.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DoctorRegistrationComponent } from './doctor-registration.component';\n\nconst routes: Routes = [\n    { path: '', component: DoctorRegistrationComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DoctorRegistrationRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-sm-8 col-md-8 mx-auto\\\">\\n        <h2>Doctor Registration</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-sm-8 col-md-8 mx-auto pt-4\\\">\\n        <form name=\\\"form\\\" #f=\\\"ngForm\\\"  (ngSubmit)=\\\"f.form.valid && register()\\\"   novalidate >\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" id=\\\"firstName\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"userModel.firstName\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"First Name\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !firstName.valid\\\" class=\\\"help-block\\\">First Name is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"userModel.lastName\\\" #lastName =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Last Name\\\" required>\\n                <div *ngIf=\\\"f.submitted && !lastName.valid\\\" class=\\\"help-block\\\">Last Name is required</div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"userModel.email\\\" #email =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Email\\\" tabindex=\\\"1\\\" required>\\n              <div *ngIf=\\\"f.submitted && !email.valid\\\" class=\\\"help-block\\\">Email is required</div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"userModel.password\\\" #password =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Password\\\" tabindex=\\\"1\\\" required>\\n                  <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" name=\\\"passwordConfirmation\\\" id=\\\"passwordConfirmation\\\" [(ngModel)]=\\\"userModel.passwordConfirmation\\\" #passwordConfirmation =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm Password\\\" tabindex=\\\"1\\\" required>\\n                  <div *ngIf=\\\"f.submitted && !passwordConfirmation.valid\\\" class=\\\"help-block\\\">Password Confirmation is required</div>\\n              </div>\\n              <div class=\\\"alert alert-danger w-100\\\" *ngIf = \\\"errors.password !== null\\\">{{errors.password}}</div>\\n            </div>\\n          </div>\\n          <h4>Practice Information</h4>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"practiceName\\\" id=\\\"practiceName\\\" #practiceName=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.practiceName\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Practice Name\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !practiceName.valid\\\" class=\\\"help-block\\\">Practice Name is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"specialty\\\" id=\\\"specialty\\\" #specialty=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.specialty\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Specialty\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !specialty.valid\\\" class=\\\"help-block\\\">Specialty is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"phone\\\" id=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.phone\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Phone\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !phone.valid\\\" class=\\\"help-block\\\">Phone is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" #pEmail=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.email\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Practice Email\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !pEmail.valid\\\" class=\\\"help-block\\\">Email is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"line_1\\\" id=\\\"line_1\\\" #line_1=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.line_1\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Line 1\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !line_1.valid\\\" class=\\\"help-block\\\">Line 1 is required</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"line_2\\\" id=\\\"line_2\\\" #line_2=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.line_2\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Line 2\\\">\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.city\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"City\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !city.valid\\\" class=\\\"help-block\\\">City is required</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"state\\\" id=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.state\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"State\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !state.valid\\\" class=\\\"help-block\\\">State is required</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                  <input type=\\\"text\\\" name=\\\"zip\\\" id=\\\"zip\\\" #zip=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.zip\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Zip\\\" required>\\n                  <div *ngIf=\\\"f.submitted  && !zip.valid\\\" class=\\\"help-block\\\">Zip is required</div>\\n                </div>\\n            </div>\\n          </div>\\n          <h6>Accepted Insurance</h6>\\n          <ss-multiselect-dropdown name=\\\"insurace\\\" [options]=\\\"myOptions\\\" [(ngModel)]=\\\"doctorModel.acceptedInsurance\\\" (ngModelChange)=\\\"onChange($event)\\\"></ss-multiselect-dropdown>\\n      \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-md-6\\\"><input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-primary btn-block btn-lg\\\" tabindex=\\\"7\\\"></div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.component.html\n// module id = ../../../../../src/app/doctor-registration/doctor-registration.component.html\n// module chunks = doctor-registration.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Credit to bootsnipp.com for the css for the color graph */\\n.colorgraph {\\n  height: 5px;\\n  border-top: 0;\\n  border-radius: 5px;\\n  background-image: linear-gradient(to right, #c4e17f, #c4e17f 12.5%, #f7fdca 12.5%, #f7fdca 25%, #fecf71 25%, #fecf71 37.5%, #f0776c 37.5%, #f0776c 50%, #db9dbe 50%, #db9dbe 62.5%, #c49cde 62.5%, #c49cde 75%, #669ae1 75%, #669ae1 87.5%, #62c2e4 87.5%, #62c2e4); }\\n\\n.background {\\n  background-image: url(\" + require(\"../../assets/images/Caduceus-On-Blue-Star-Of-Life.png\") + \");\\n  background-repeat: no-repeat;\\n  background-attachment: fixed;\\n  background-position: center;\\n  background-size: auto;\\n  background-size: 145px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.component.scss\n// module id = ../../../../../src/app/doctor-registration/doctor-registration.component.scss\n// module chunks = doctor-registration.module","import { Component, OnInit } from '@angular/core';\nimport { Patient } from '../shared';\nimport { Router } from '@angular/router';\nimport { UserService, InsuranceService, DoctorService } from '../services';\nimport { IMultiSelectOption } from 'angular-2-dropdown-multiselect';\n\n@Component({\n  selector: 'app-doctor-registration',\n  templateUrl: './doctor-registration.component.html',\n  styleUrls: ['./doctor-registration.component.scss']\n})\nexport class DoctorRegistrationComponent implements OnInit {\n\n\n  public submitted = false;\n  public userModel: any = {};\n  public doctorModel: any = {address: {}, acceptedInsurance: [] };\n  public loading = false;\n  public created = false;\n\n  optionsModel: number[];\n  myOptions: IMultiSelectOption[];\n\n\n  public errors = {password: null}\n\n  constructor(public router: Router, private userService: UserService,\n              private doctorService: DoctorService, private insuranceService: InsuranceService) { }\n\n  ngOnInit() {\n\n    this.insuranceService.getAllInsurances()\n      .then( (data: any) => {\n                              for (let ins of data.insurance){\n                                ins.id = ins._id;\n                              }\n                              this.myOptions = data.insurance;\n                            })\n    \n  }\n\n  onChange() {\n    console.log(this.doctorModel.acceptedInsurance);\n  }\n\n  register() {\n    this.loading = true;\n    console.log('models', this.userModel, this.doctorModel);\n\n    if (this.userModel.password !== this.userModel.passwordConfirmation) {\n      this.errors.password = 'Passwords don\\'t match';\n    } else {\n      console.log('Email',this.userModel.email)\n      this.userService.getUser({email: this.userModel.email})\n        .then((res: any) => {\n          console.log('checking repeats', res);\n          if (!res.success) {\n            this.doctorModel.firstName =  this.userModel.firstName;\n            this.doctorModel.lastName =  this.userModel.lastName;\n            this.doctorService.createDoctor(this.doctorModel)\n              .then( (data: any) => {\n                                      this.userModel.doctor = data.doctor._id;\n                                      this.userService.createUser(this.userModel)\n                                      .then((r: any) => {\n                                        console.log('registering', r);\n                                        if (r.success) {\n                                          this.router.navigate(['/login']);\n                                        }\n                                    } );\n              });\n          } else {\n            console.log('Doctor email aready used');\n          }\n        });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService, InsuranceService, DoctorService } from '../services';\n\nimport { DoctorRegistrationRoutingModule } from './doctor-registration-routing.module';\nimport { DoctorRegistrationComponent } from './doctor-registration.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DoctorRegistrationRoutingModule,\n        FormsModule,\n        NgbModule,\n        MultiselectDropdownModule\n    ],\n    providers: [ UserService, InsuranceService, DoctorService ],\n    declarations: [DoctorRegistrationComponent]\n})\nexport class DoctorRegistrationModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hunter/Documents/smart-health/src/app/doctor-registration/doctor-registration.module.ts","module.exports = __webpack_public_path__ + \"Caduceus-On-Blue-Star-Of-Life.d5ccac8d5939fd5ec31f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/src/assets/images/Caduceus-On-Blue-Star-Of-Life.png\n// module id = ../../../../../src/assets/images/Caduceus-On-Blue-Star-Of-Life.png\n// module chunks = doctor-registration.module","import 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/takeUntil';\nimport { Component, ElementRef, EventEmitter, forwardRef, HostListener, Input, IterableDiffers, Output } from '@angular/core';\nimport { FormBuilder, NG_VALUE_ACCESSOR, } from '@angular/forms';\nimport { Subject } from 'rxjs/Subject';\nimport { MultiSelectSearchFilter } from './search-filter.pipe';\n/*\n * Angular 2 Dropdown Multiselect for Bootstrap\n *\n * Simon Lindh\n * https://github.com/softsimon/angular-2-dropdown-multiselect\n */\nvar MULTISELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MultiselectDropdown; }),\n    multi: true\n};\nvar MultiselectDropdown = (function () {\n    function MultiselectDropdown(element, fb, searchFilter, differs) {\n        this.element = element;\n        this.fb = fb;\n        this.searchFilter = searchFilter;\n        this.filterControl = this.fb.control('');\n        this.disabled = false;\n        this.disabledSelection = false;\n        this.selectionLimitReached = new EventEmitter();\n        this.dropdownClosed = new EventEmitter();\n        this.dropdownOpened = new EventEmitter();\n        this.onAdded = new EventEmitter();\n        this.onRemoved = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onFilter = this.filterControl.valueChanges;\n        this.destroyed$ = new Subject();\n        this.filteredOptions = [];\n        this.lazyLoadOptions = [];\n        this.renderFilteredOptions = [];\n        this.model = [];\n        this.prevModel = [];\n        this.numSelected = 0;\n        this.renderItems = true;\n        this.checkAllSearchRegister = new Set();\n        this.checkAllStatus = false;\n        this.loadedValueIds = [];\n        this.defaultSettings = {\n            closeOnClickOutside: true,\n            pullRight: false,\n            enableSearch: false,\n            searchRenderLimit: 0,\n            searchRenderAfter: 1,\n            searchMaxLimit: 0,\n            searchMaxRenderedItems: 0,\n            checkedStyle: 'checkboxes',\n            buttonClasses: 'btn btn-default btn-secondary',\n            containerClasses: 'dropdown-inline',\n            selectionLimit: 0,\n            minSelectionLimit: 0,\n            closeOnSelect: false,\n            autoUnselect: false,\n            showCheckAll: false,\n            showUncheckAll: false,\n            fixedTitle: false,\n            dynamicTitleMaxItems: 3,\n            maxHeight: '300px',\n            isLazyLoad: false,\n            stopScrollPropagation: false,\n            loadViewDistance: 1,\n            selectAddedValues: false,\n            ignoreLabels: false\n        };\n        this.defaultTexts = {\n            checkAll: 'Check all',\n            uncheckAll: 'Uncheck all',\n            checked: 'checked',\n            checkedPlural: 'checked',\n            searchPlaceholder: 'Search...',\n            searchEmptyResult: 'Nothing found...',\n            searchNoRenderText: 'Type in search box to see results...',\n            defaultTitle: 'Select',\n            allSelected: 'All selected',\n        };\n        this._isVisible = false;\n        this._workerDocClicked = false;\n        this.onModelChange = function (_) { };\n        this.onModelTouched = function () { };\n        this.differ = differs.find([]).create(null);\n        this.settings = this.defaultSettings;\n        this.texts = this.defaultTexts;\n    }\n    MultiselectDropdown.prototype.onClick = function (target) {\n        if (!this.isVisible || !this.settings.closeOnClickOutside)\n            return;\n        var parentFound = false;\n        while (target != null && !parentFound) {\n            if (target === this.element.nativeElement) {\n                parentFound = true;\n            }\n            target = target.parentElement;\n        }\n        if (!parentFound) {\n            this.isVisible = false;\n            this.dropdownClosed.emit();\n        }\n    };\n    Object.defineProperty(MultiselectDropdown.prototype, \"isVisible\", {\n        get: function () {\n            return this._isVisible;\n        },\n        set: function (val) {\n            this._isVisible = val;\n            this._workerDocClicked = val ? false : this._workerDocClicked;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiselectDropdown.prototype, \"searchLimit\", {\n        get: function () {\n            return this.settings.searchRenderLimit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiselectDropdown.prototype, \"searchRenderAfter\", {\n        get: function () {\n            return this.settings.searchRenderAfter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiselectDropdown.prototype, \"searchLimitApplied\", {\n        get: function () {\n            return this.searchLimit > 0 && this.options.length > this.searchLimit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MultiselectDropdown.prototype.getItemStyle = function (option) {\n        if (!option.isLabel) {\n            return { 'cursor': 'pointer' };\n        }\n    };\n    MultiselectDropdown.prototype.getItemStyleSelectionDisabled = function () {\n        if (this.disabledSelection) {\n            return { 'cursor': 'default' };\n        }\n    };\n    MultiselectDropdown.prototype.ngOnInit = function () {\n        this.settings = Object.assign(this.defaultSettings, this.settings);\n        this.texts = Object.assign(this.defaultTexts, this.texts);\n        this.title = this.texts.defaultTitle || '';\n        this.filterControl.valueChanges\n            .takeUntil(this.destroyed$)\n            .subscribe(function () {\n            this.updateRenderItems();\n            if (this.settings.isLazyLoad) {\n                this.load();\n            }\n        }.bind(this));\n    };\n    MultiselectDropdown.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes['options']) {\n            this.options = this.options || [];\n            this.parents = this.options\n                .filter(function (option) { return typeof option.parentId === 'number'; })\n                .map(function (option) { return option.parentId; });\n            this.updateRenderItems();\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues && this.loadedValueIds.length === 0) {\n                this.loadedValueIds = this.loadedValueIds.concat(changes.options.currentValue.map(function (value) { return value.id; }));\n            }\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues && changes.options.previousValue) {\n                var addedValues_1 = changes.options.currentValue.filter(function (value) { return _this.loadedValueIds.indexOf(value.id) === -1; });\n                this.loadedValueIds.concat(addedValues_1.map(function (value) { return value.id; }));\n                if (this.checkAllStatus) {\n                    this.addChecks(addedValues_1);\n                }\n                else if (this.checkAllSearchRegister.size > 0) {\n                    this.checkAllSearchRegister.forEach(function (searchValue) { return _this.addChecks(_this.applyFilters(addedValues_1, searchValue)); });\n                }\n            }\n            if (this.texts) {\n                this.updateTitle();\n            }\n            this.fireModelChange();\n        }\n        if (changes['texts'] && !changes['texts'].isFirstChange()) {\n            this.updateTitle();\n        }\n    };\n    MultiselectDropdown.prototype.ngOnDestroy = function () {\n        this.destroyed$.next();\n    };\n    MultiselectDropdown.prototype.updateRenderItems = function () {\n        this.renderItems = !this.searchLimitApplied || this.filterControl.value.length >= this.searchRenderAfter;\n        this.filteredOptions = this.applyFilters(this.options, this.settings.isLazyLoad ? '' : this.filterControl.value);\n        this.renderFilteredOptions = this.renderItems ? this.filteredOptions : [];\n    };\n    MultiselectDropdown.prototype.applyFilters = function (options, value) {\n        return (this.searchFilter.transform(options, value, this.settings.searchMaxLimit, this.settings.searchMaxRenderedItems));\n    };\n    MultiselectDropdown.prototype.fireModelChange = function () {\n        if (this.model != this.prevModel) {\n            this.prevModel = this.model;\n            this.onModelChange(this.model);\n            this.onModelTouched();\n        }\n    };\n    MultiselectDropdown.prototype.writeValue = function (value) {\n        if (value !== undefined && value !== null) {\n            this.model = Array.isArray(value) ? value : [value];\n        }\n        else {\n            this.model = [];\n        }\n    };\n    MultiselectDropdown.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    MultiselectDropdown.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    MultiselectDropdown.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    MultiselectDropdown.prototype.ngDoCheck = function () {\n        var changes = this.differ.diff(this.model);\n        if (changes) {\n            this.updateNumSelected();\n            this.updateTitle();\n        }\n    };\n    MultiselectDropdown.prototype.validate = function (_c) {\n        return (this.model && this.model.length) ? null : {\n            required: {\n                valid: false,\n            },\n        };\n    };\n    MultiselectDropdown.prototype.registerOnValidatorChange = function (_fn) {\n        throw new Error('Method not implemented.');\n    };\n    MultiselectDropdown.prototype.clearSearch = function (event) {\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n        this.filterControl.setValue('');\n    };\n    MultiselectDropdown.prototype.toggleDropdown = function () {\n        this.isVisible = !this.isVisible;\n        this.isVisible ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    };\n    MultiselectDropdown.prototype.isSelected = function (option) {\n        return this.model && this.model.indexOf(option.id) > -1;\n    };\n    MultiselectDropdown.prototype.setSelected = function (_event, option) {\n        var _this = this;\n        if (option.isLabel) {\n            return;\n        }\n        if (!this.disabledSelection) {\n            if (_event.stopPropagation) {\n                _event.stopPropagation();\n            }\n            var index = this.model.indexOf(option.id);\n            var isAtSelectionLimit = this.settings.selectionLimit > 0 && this.model.length >= this.settings.selectionLimit;\n            var removeItem_1 = function (idx, id) {\n                _this.model.splice(idx, 1);\n                _this.onRemoved.emit(id);\n                if (_this.settings.isLazyLoad && _this.lazyLoadOptions.some(function (val) { return val.id === id; })) {\n                    _this.lazyLoadOptions.splice(_this.lazyLoadOptions.indexOf(_this.lazyLoadOptions.find(function (val) { return val.id === id; })), 1);\n                }\n            };\n            if (index > -1) {\n                if ((this.settings.minSelectionLimit === undefined) || (this.numSelected > this.settings.minSelectionLimit)) {\n                    removeItem_1(index, option.id);\n                }\n                var parentIndex = option.parentId && this.model.indexOf(option.parentId);\n                if (parentIndex > -1) {\n                    removeItem_1(parentIndex, option.parentId);\n                }\n                else if (this.parents.indexOf(option.id) > -1) {\n                    this.options.filter(function (child) { return _this.model.indexOf(child.id) > -1 && child.parentId === option.id; })\n                        .forEach(function (child) { return removeItem_1(_this.model.indexOf(child.id), child.id); });\n                }\n            }\n            else if (isAtSelectionLimit && !this.settings.autoUnselect) {\n                this.selectionLimitReached.emit(this.model.length);\n                return;\n            }\n            else {\n                var addItem_1 = function (id) {\n                    _this.model.push(id);\n                    _this.onAdded.emit(id);\n                    if (_this.settings.isLazyLoad && !_this.lazyLoadOptions.some(function (val) { return val.id === id; })) {\n                        _this.lazyLoadOptions.push(option);\n                    }\n                };\n                addItem_1(option.id);\n                if (!isAtSelectionLimit) {\n                    if (option.parentId && !this.settings.ignoreLabels) {\n                        var children = this.options.filter(function (child) { return child.id !== option.id && child.parentId === option.parentId; });\n                        if (children.every(function (child) { return _this.model.indexOf(child.id) > -1; })) {\n                            addItem_1(option.parentId);\n                        }\n                    }\n                    else if (this.parents.indexOf(option.id) > -1) {\n                        var children = this.options.filter(function (child) { return _this.model.indexOf(child.id) < 0 && child.parentId === option.id; });\n                        children.forEach(function (child) { return addItem_1(child.id); });\n                    }\n                }\n                else {\n                    removeItem_1(0, this.model[0]);\n                }\n            }\n            if (this.settings.closeOnSelect) {\n                this.toggleDropdown();\n            }\n            this.model = this.model.slice();\n            this.fireModelChange();\n        }\n    };\n    MultiselectDropdown.prototype.updateNumSelected = function () {\n        var _this = this;\n        this.numSelected = this.model.filter(function (id) { return _this.parents.indexOf(id) < 0; }).length || 0;\n    };\n    MultiselectDropdown.prototype.updateTitle = function () {\n        var _this = this;\n        var numSelectedOptions = this.options.length;\n        if (this.settings.ignoreLabels) {\n            numSelectedOptions = this.options.filter(function (option) { return !option.isLabel; }).length;\n        }\n        if (this.numSelected === 0 || this.settings.fixedTitle) {\n            this.title = (this.texts) ? this.texts.defaultTitle : '';\n        }\n        else if (this.settings.displayAllSelectedText && this.model.length === numSelectedOptions) {\n            this.title = (this.texts) ? this.texts.allSelected : '';\n        }\n        else if (this.settings.dynamicTitleMaxItems && this.settings.dynamicTitleMaxItems >= this.numSelected) {\n            var useOptions = this.settings.isLazyLoad && this.lazyLoadOptions ? this.lazyLoadOptions : this.options;\n            this.title = useOptions\n                .filter(function (option) {\n                return _this.model.indexOf(option.id) > -1;\n            })\n                .map(function (option) { return option.name; })\n                .join(', ');\n        }\n        else {\n            this.title = this.numSelected\n                + ' '\n                + (this.numSelected === 1 ? this.texts.checked : this.texts.checkedPlural);\n        }\n    };\n    MultiselectDropdown.prototype.searchFilterApplied = function () {\n        return this.settings.enableSearch && this.filterControl.value && this.filterControl.value.length > 0;\n    };\n    MultiselectDropdown.prototype.addChecks = function (options) {\n        var checkedOptions = options\n            .filter(function (option) {\n            if (this.model.indexOf(option.id) === -1 && !(this.settings.ignoreLabels && option.isLabel)) {\n                this.onAdded.emit(option.id);\n                return true;\n            }\n            return false;\n        }.bind(this)).map(function (option) { return option.id; });\n        this.model = this.model.concat(checkedOptions);\n    };\n    MultiselectDropdown.prototype.checkAll = function () {\n        if (!this.disabledSelection) {\n            this.addChecks(!this.searchFilterApplied() ? this.options : this.filteredOptions);\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues) {\n                if (this.searchFilterApplied() && !this.checkAllStatus) {\n                    this.checkAllSearchRegister.add(this.filterControl.value);\n                }\n                else {\n                    this.checkAllSearchRegister.clear();\n                    this.checkAllStatus = true;\n                }\n                this.load();\n            }\n            this.fireModelChange();\n        }\n    };\n    MultiselectDropdown.prototype.uncheckAll = function () {\n        var _this = this;\n        if (!this.disabledSelection) {\n            var checkedOptions = this.model;\n            var unCheckedOptions_1 = (!this.searchFilterApplied() ? this.model\n                : this.filteredOptions.map(function (option) { return option.id; }));\n            // set unchecked options only to the ones that were checked\n            unCheckedOptions_1 = checkedOptions.filter(function (item) { return _this.model.includes(item); });\n            this.model = this.model.filter(function (id) {\n                if (((unCheckedOptions_1.indexOf(id) < 0) && (_this.settings.minSelectionLimit === undefined)) || ((unCheckedOptions_1.indexOf(id) < _this.settings.minSelectionLimit))) {\n                    return true;\n                }\n                else {\n                    _this.onRemoved.emit(id);\n                    return false;\n                }\n            });\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues) {\n                if (this.searchFilterApplied()) {\n                    if (this.checkAllSearchRegister.has(this.filterControl.value)) {\n                        this.checkAllSearchRegister.delete(this.filterControl.value);\n                        this.checkAllSearchRegister.forEach(function (searchTerm) {\n                            var filterOptions = this.applyFilters(this.options.filter(function (option) { return unCheckedOptions_1.includes(option.id); }), searchTerm);\n                            this.addChecks(filterOptions);\n                        }.bind(this));\n                    }\n                }\n                else {\n                    this.checkAllSearchRegister.clear();\n                    this.checkAllStatus = false;\n                }\n                this.load();\n            }\n            this.fireModelChange();\n        }\n    };\n    MultiselectDropdown.prototype.preventCheckboxCheck = function (event, option) {\n        if (this.settings.selectionLimit && !this.settings.autoUnselect &&\n            this.model.length >= this.settings.selectionLimit &&\n            this.model.indexOf(option.id) === -1 &&\n            event.preventDefault) {\n            event.preventDefault();\n        }\n    };\n    MultiselectDropdown.prototype.isCheckboxDisabled = function () {\n        return this.disabledSelection;\n    };\n    MultiselectDropdown.prototype.checkScrollPosition = function (ev) {\n        var scrollTop = ev.target.scrollTop;\n        var scrollHeight = ev.target.scrollHeight;\n        var scrollElementHeight = ev.target.clientHeight;\n        var roundingPixel = 1;\n        var gutterPixel = 1;\n        if (scrollTop >= scrollHeight - (1 + this.settings.loadViewDistance) * scrollElementHeight - roundingPixel - gutterPixel) {\n            this.load();\n        }\n    };\n    MultiselectDropdown.prototype.checkScrollPropagation = function (ev, element) {\n        var scrollTop = element.scrollTop;\n        var scrollHeight = element.scrollHeight;\n        var scrollElementHeight = element.clientHeight;\n        if ((ev.deltaY > 0 && scrollTop + scrollElementHeight >= scrollHeight) || (ev.deltaY < 0 && scrollTop <= 0)) {\n            ev = ev || window.event;\n            ev.preventDefault && ev.preventDefault();\n            ev.returnValue = false;\n        }\n    };\n    MultiselectDropdown.prototype.load = function () {\n        this.onLazyLoad.emit({\n            length: this.options.length,\n            filter: this.filterControl.value,\n            checkAllSearches: this.checkAllSearchRegister,\n            checkAllStatus: this.checkAllStatus\n        });\n    };\n    return MultiselectDropdown;\n}());\nexport { MultiselectDropdown };\nMultiselectDropdown.decorators = [\n    { type: Component, args: [{\n                selector: 'ss-multiselect-dropdown',\n                template: '<div class=\"dropdown\" [ngClass]=\"settings.containerClasses\" [class.open]=\"isVisible\"><button type=\"button\" class=\"dropdown-toggle\" [ngClass]=\"settings.buttonClasses\" (click)=\"toggleDropdown()\" [disabled]=\"disabled\">{{ title }}<span class=\"caret\"></span></button><ul #scroller *ngIf=\"isVisible\" class=\"dropdown-menu\" (scroll)=\"settings.isLazyLoad ? checkScrollPosition($event) : null\" (wheel)=\"settings.stopScrollPropagation ? checkScrollPropagation($event, scroller) : null\" [class.pull-right]=\"settings.pullRight\" [class.dropdown-menu-right]=\"settings.pullRight\" [style.max-height]=\"settings.maxHeight\" style=\"display: block; height: auto; overflow-y: auto\"><li class=\"dropdown-item search\" *ngIf=\"settings.enableSearch\"><div class=\"input-group input-group-sm\"><span class=\"input-group-addon\" id=\"sizing-addon3\"><i class=\"fa fa-search\"></i></span> <input type=\"text\" class=\"form-control\" placeholder=\"{{ texts.searchPlaceholder }}\" aria-describedby=\"sizing-addon3\" [formControl]=\"filterControl\" autofocus> <span class=\"input-group-btn\" *ngIf=\"filterControl.value.length > 0\"><button class=\"btn btn-default btn-secondary\" type=\"button\" (click)=\"clearSearch($event)\"><i class=\"fa fa-times\"></i></button></span></div></li><li class=\"dropdown-divider divider\" *ngIf=\"settings.enableSearch\"></li><li class=\"dropdown-item check-control check-control-check\" *ngIf=\"settings.showCheckAll && !disabledSelection\" (click)=\"checkAll()\"><a href=\"javascript:;\" role=\"menuitem\" tabindex=\"-1\"><span style=\"width: 16px\" [ngClass]=\"{\\'glyphicon glyphicon-ok\\': settings.checkedStyle !== \\'fontawesome\\',\\'fa fa-check\\': settings.checkedStyle === \\'fontawesome\\'}\"></span> {{ texts.checkAll }}</a></li><li class=\"dropdown-item check-control check-control-uncheck\" *ngIf=\"settings.showUncheckAll && !disabledSelection\" (click)=\"uncheckAll()\"><a href=\"javascript:;\" role=\"menuitem\" tabindex=\"-1\"><span style=\"width: 16px\" [ngClass]=\"{\\'glyphicon glyphicon-remove\\': settings.checkedStyle !== \\'fontawesome\\',\\'fa fa-times\\': settings.checkedStyle === \\'fontawesome\\'}\"></span> {{ texts.uncheckAll }}</a></li><li *ngIf=\"settings.showCheckAll || settings.showUncheckAll\" class=\"dropdown-divider divider\"></li><li *ngIf=\"!renderItems\" class=\"dropdown-item empty\">{{ texts.searchNoRenderText }}</li><li *ngIf=\"renderItems && !renderFilteredOptions.length\" class=\"dropdown-item empty\">{{ texts.searchEmptyResult }}</li><li class=\"dropdown-item\" *ngFor=\"let option of renderFilteredOptions\" (click)=\"setSelected($event, option)\" [ngStyle]=\"getItemStyle(option)\" [ngClass]=\"option.classes\" [class.dropdown-header]=\"option.isLabel\"><a *ngIf=\"!option.isLabel; else label\" href=\"javascript:;\" role=\"menuitem\" tabindex=\"-1\" [style.padding-left]=\"this.parents.length>0&&this.parents.indexOf(option.id)<0&&\\'30px\\'\" [ngStyle]=\"getItemStyleSelectionDisabled()\"><ng-container [ngSwitch]=\"settings.checkedStyle\"><input *ngSwitchCase=\"\\'checkboxes\\'\" type=\"checkbox\" [checked]=\"isSelected(option)\" (click)=\"preventCheckboxCheck($event, option)\" [disabled]=\"isCheckboxDisabled()\" [ngStyle]=\"getItemStyleSelectionDisabled()\" > <span *ngSwitchCase=\"\\'glyphicon\\'\" style=\"width: 16px\" class=\"glyphicon\" [class.glyphicon-ok]=\"isSelected(option)\"></span> <span *ngSwitchCase=\"\\'fontawesome\\'\" style=\"width: 16px;display: inline-block\"><i *ngIf=\"isSelected(option)\" class=\"fa fa-check\" aria-hidden=\"true\"></i></span></ng-container><span [ngClass]=\"settings.itemClasses\" [style.font-weight]=\"this.parents.indexOf(option.id)>=0?\\'bold\\':\\'normal\\'\">{{ option.name }}</span></a><ng-template #label>{{ option.name }}</ng-template></li></ul></div>',\n                styles: ['a {  outline: none !important;}.dropdown-inline {  display: inline-block;}.dropdown-toggle .caret {  margin-left: 4px;  white-space: nowrap;  display: inline-block;}'],\n                providers: [MULTISELECT_VALUE_ACCESSOR, MultiSelectSearchFilter]\n            },] },\n];\n/** @nocollapse */\nMultiselectDropdown.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: FormBuilder, },\n    { type: MultiSelectSearchFilter, },\n    { type: IterableDiffers, },\n]; };\nMultiselectDropdown.propDecorators = {\n    'options': [{ type: Input },],\n    'settings': [{ type: Input },],\n    'texts': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'disabledSelection': [{ type: Input },],\n    'selectionLimitReached': [{ type: Output },],\n    'dropdownClosed': [{ type: Output },],\n    'dropdownOpened': [{ type: Output },],\n    'onAdded': [{ type: Output },],\n    'onRemoved': [{ type: Output },],\n    'onLazyLoad': [{ type: Output },],\n    'onFilter': [{ type: Output },],\n    'onClick': [{ type: HostListener, args: ['document: click', ['$event.target'],] }, { type: HostListener, args: ['document: touchstart', ['$event.target'],] },],\n};\n//# sourceMappingURL=dropdown.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.component.js\n// module id = ../../../../angular-2-dropdown-multiselect/dropdown/dropdown.component.js\n// module chunks = doctor-registration.module","import { MultiselectDropdown } from './dropdown.component';\nimport { MultiSelectSearchFilter } from './search-filter.pipe';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nvar MultiselectDropdownModule = (function () {\n    function MultiselectDropdownModule() {\n    }\n    return MultiselectDropdownModule;\n}());\nexport { MultiselectDropdownModule };\nMultiselectDropdownModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, ReactiveFormsModule],\n                exports: [MultiselectDropdown, MultiSelectSearchFilter],\n                declarations: [MultiselectDropdown, MultiSelectSearchFilter],\n            },] },\n];\n/** @nocollapse */\nMultiselectDropdownModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=dropdown.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.module.js\n// module id = ../../../../angular-2-dropdown-multiselect/dropdown/dropdown.module.js\n// module chunks = doctor-registration.module","import { Pipe } from '@angular/core';\nvar MultiSelectSearchFilter = (function () {\n    function MultiSelectSearchFilter() {\n        this._searchCache = {};\n        this._searchCacheInclusive = {};\n    }\n    MultiSelectSearchFilter.prototype.transform = function (options, str, limit, renderLimit) {\n        if (limit === void 0) { limit = 0; }\n        if (renderLimit === void 0) { renderLimit = 0; }\n        str = (str || '').toLowerCase();\n        // Drop cache because options were updated\n        if (options !== this._lastOptions) {\n            this._lastOptions = options;\n            this._searchCache = {};\n            this._searchCacheInclusive = {};\n        }\n        var isUnderLimit = options.length <= limit;\n        if (this._searchCache.hasOwnProperty(str)) {\n            return isUnderLimit ? this._searchCache[str] : this._limitRenderedItems(this._searchCache[str], renderLimit);\n        }\n        var prevStr = str.slice(0, -1);\n        var prevResults = this._searchCache[prevStr];\n        if (prevResults) {\n            var prevInclusiveOrIdx = this._searchCacheInclusive[prevStr];\n            if (prevInclusiveOrIdx === true) {\n                // If have previous results and it was inclusive, do only subsearch\n                options = prevResults;\n            }\n            else if (typeof prevInclusiveOrIdx === 'number') {\n                // Or reuse prev results with unchecked ones\n                options = prevResults.concat(options.slice(prevInclusiveOrIdx));\n            }\n        }\n        var optsLength = options.length;\n        var maxFound = limit > 0 ? Math.min(limit, optsLength) : optsLength;\n        var filteredOpts = [];\n        var regexp = new RegExp(this._escapeRegExp(str), 'i');\n        var matchPredicate = function (option) { return regexp.test(option.name); }, getChildren = function (option) { return options.filter(function (child) { return child.parentId === option.id; }); }, getParent = function (option) { return options.find(function (parent) { return option.parentId === parent.id; }); };\n        var i = 0, founded = 0;\n        for (; i < optsLength && founded < maxFound; ++i) {\n            var option = options[i];\n            var directMatch = regexp.test(option.name);\n            if (directMatch) {\n                filteredOpts.push(option);\n                founded++;\n                continue;\n            }\n            if (typeof (option.parentId) === 'undefined') {\n                var childrenMatch = getChildren(option).some(matchPredicate);\n                if (childrenMatch) {\n                    filteredOpts.push(option);\n                    founded++;\n                    continue;\n                }\n            }\n            if (typeof (option.parentId) !== 'undefined') {\n                var parentMatch = matchPredicate(getParent(option));\n                if (parentMatch) {\n                    filteredOpts.push(option);\n                    founded++;\n                    continue;\n                }\n            }\n        }\n        this._searchCache[str] = filteredOpts;\n        this._searchCacheInclusive[str] = i === optsLength || i + 1;\n        return isUnderLimit ? filteredOpts : this._limitRenderedItems(filteredOpts, renderLimit);\n    };\n    MultiSelectSearchFilter.prototype._limitRenderedItems = function (items, limit) {\n        return items.length > limit && limit > 0 ? items.slice(0, limit) : items;\n    };\n    MultiSelectSearchFilter.prototype._escapeRegExp = function (str) {\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n    };\n    return MultiSelectSearchFilter;\n}());\nexport { MultiSelectSearchFilter };\nMultiSelectSearchFilter.decorators = [\n    { type: Pipe, args: [{\n                name: 'searchFilter'\n            },] },\n];\n/** @nocollapse */\nMultiSelectSearchFilter.ctorParameters = function () { return []; };\n//# sourceMappingURL=search-filter.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/search-filter.pipe.js\n// module id = ../../../../angular-2-dropdown-multiselect/dropdown/search-filter.pipe.js\n// module chunks = doctor-registration.module","export * from './dropdown/search-filter.pipe';\nexport * from './dropdown/dropdown.module';\nexport * from './dropdown/dropdown.component';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/node_modules/angular-2-dropdown-multiselect/index.js\n// module id = ../../../../angular-2-dropdown-multiselect/index.js\n// module chunks = doctor-registration.module"],"sourceRoot":"webpack:///"}
=======
{"version":3,"sources":["/Users/apple/smart-health/src/app/doctor-registration/doctor-registration-routing.module.ts","/Users/apple/smart-health/src/app/doctor-registration/doctor-registration.component.html","/Users/apple/smart-health/src/app/doctor-registration/doctor-registration.component.scss","/Users/apple/smart-health/src/app/doctor-registration/doctor-registration.component.ts","/Users/apple/smart-health/src/app/doctor-registration/doctor-registration.module.ts","/Users/apple/smart-health/src/assets/images/Caduceus-On-Blue-Star-Of-Life.png","/Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.component.js","/Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.module.js","/Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/search-filter.pipe.js","/Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/index.js"],"names":[],"mappings":"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A,0GAAyC,4BAA4B,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF,wCAAwC,wBAAwB,EAAE;AAClE;AACA;AACA,oHAAoH,iBAAiB,EAAE;AACvI;AACA;AACA,0FAA0F,sDAAsD,EAAE;AAClJ,+EAA+E,iBAAiB,EAAE;AAClG;AACA;AACA;AACA;AACA,gFAAgF,wEAAwE,EAAE;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,sBAAsB,EAAE;AACpH,0HAA0H,sBAAsB,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2EAA2E,EAAE;AACvI,mDAAmD,8DAA8D,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,sBAAsB,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,qEAAqE,EAAE;AACpJ,6DAA6D,2CAA2C,EAAE;AAC1G;AACA;AACA;AACA;AACA,6EAA6E,0EAA0E,EAAE;AACzJ,2DAA2D,4BAA4B,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,sCAAsC,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA,wEAAwE,wBAAwB,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wCAAwC,oBAAoB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oCAAoC,kBAAkB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,kBAAkB,EAAE;AAClF;AACA,wEAAwE,mCAAmC,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yGAAyG,+CAA+C,EAAE;AAC1J;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA,oPAAoP,SAAS,gZAAgZ,cAAc,wQAAwQ,2BAA2B,mgBAAmgB,sEAAsE,iIAAiI,YAAY,kBAAkB,yKAAyK,sEAAsE,qIAAqI,YAAY,oBAAoB,mKAAmK,4BAA4B,4FAA4F,2BAA2B,iPAAiP,+BAA+B,gmBAAgmB,4OAA4O,eAAe,iCAAiC,eAAe;AAC3gH,6BAA6B,4BAA4B,kBAAkB,yBAAyB,yBAAyB,mBAAmB,sBAAsB,yBAAyB;AAC/L;AACA,aAAa,IAAI;AACjB;AACA;AACA,kDAAkD;AAClD,KAAK,2EAAoB;AACzB,KAAK,6EAAqB;AAC1B,KAAK,8FAAiC;AACtC,KAAK,gFAAyB;AAC9B,EAAE;AACF;AACA,iBAAiB,qEAAc;AAC/B,kBAAkB,qEAAc;AAChC,eAAe,qEAAc;AAC7B,kBAAkB,qEAAc;AAChC,2BAA2B,qEAAc;AACzC,+BAA+B,sEAAe;AAC9C,wBAAwB,sEAAe;AACvC,wBAAwB,sEAAe;AACvC,iBAAiB,sEAAe;AAChC,mBAAmB,sEAAe;AAClC,oBAAoB,sEAAe;AACnC,kBAAkB,sEAAe;AACjC,iBAAiB,2HAAoE,GAAG,gIAAyE;AACjK;AACA,8C;;;;;;;;;;;;;;ACze8B;AACI;AACX;AACJ;AACW;AAC9B;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,wDAAwD,WAAW;AACnE,2C;;;;;;;;;;ACpBe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC,EAAE,mCAAmC,yCAAyC,qCAAqC,EAAE,EAAE,EAAE,iCAAiC,wCAAwC,sCAAsC,EAAE,EAAE;AAC7T;AACA,cAAc,sCAAsC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA,CAAC;AACO;AACR;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA,sDAAsD,WAAW;AACjE,8C;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA,iC","file":"doctor-registration.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DoctorRegistrationComponent } from './doctor-registration.component';\n\nconst routes: Routes = [\n    { path: '', component: DoctorRegistrationComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DoctorRegistrationRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/apple/smart-health/src/app/doctor-registration/doctor-registration-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-sm-8 col-md-8 mx-auto\\\">\\n        <h2>Doctor Registration</h2>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 col-sm-8 col-md-8 mx-auto pt-4\\\">\\n        <form name=\\\"form\\\" #f=\\\"ngForm\\\"  (ngSubmit)=\\\"f.form.valid && register()\\\"   novalidate >\\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" id=\\\"firstName\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"userModel.firstName\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"First Name\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !firstName.valid\\\" class=\\\"help-block\\\">First Name is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"userModel.lastName\\\" #lastName =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Last Name\\\" required>\\n                <div *ngIf=\\\"f.submitted && !lastName.valid\\\" class=\\\"help-block\\\">Last Name is required</div>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"userModel.email\\\" #email =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Email\\\" tabindex=\\\"1\\\" required>\\n              <div *ngIf=\\\"f.submitted && !email.valid\\\" class=\\\"help-block\\\">Email is required</div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"userModel.password\\\" #password =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Password\\\" tabindex=\\\"1\\\" required>\\n                  <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"password\\\" name=\\\"passwordConfirmation\\\" id=\\\"passwordConfirmation\\\" [(ngModel)]=\\\"userModel.passwordConfirmation\\\" #passwordConfirmation =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm Password\\\" tabindex=\\\"1\\\" required>\\n                  <div *ngIf=\\\"f.submitted && !passwordConfirmation.valid\\\" class=\\\"help-block\\\">Password Confirmation is required</div>\\n              </div>\\n              <div class=\\\"alert alert-danger w-100\\\" *ngIf = \\\"errors.password !== null\\\">{{errors.password}}</div>\\n            </div>\\n          </div>\\n          <h4>Practice Information</h4>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"practiceName\\\" id=\\\"practiceName\\\" #practiceName=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.practiceName\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Practice Name\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !practiceName.valid\\\" class=\\\"help-block\\\">Practice Name is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"specialty\\\" id=\\\"specialty\\\" #specialty=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.specialty\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Specialty\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !specialty.valid\\\" class=\\\"help-block\\\">Specialty is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"phone\\\" id=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.phone\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Phone\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !phone.valid\\\" class=\\\"help-block\\\">Phone is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" #pEmail=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.email\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Practice Email\\\" required>\\n            <div *ngIf=\\\"f.submitted  && !pEmail.valid\\\" class=\\\"help-block\\\">Email is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"line_1\\\" id=\\\"line_1\\\" #line_1=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.line_1\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Line 1\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !line_1.valid\\\" class=\\\"help-block\\\">Line 1 is required</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"line_2\\\" id=\\\"line_2\\\" #line_2=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.line_2\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Line 2\\\">\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.city\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"City\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !city.valid\\\" class=\\\"help-block\\\">City is required</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input type=\\\"text\\\" name=\\\"state\\\" id=\\\"state\\\" #state=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.state\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"State\\\" required>\\n                <div *ngIf=\\\"f.submitted  && !state.valid\\\" class=\\\"help-block\\\">State is required</div>\\n              </div>\\n              <div class=\\\"col\\\">\\n                  <input type=\\\"text\\\" name=\\\"zip\\\" id=\\\"zip\\\" #zip=\\\"ngModel\\\" [(ngModel)]=\\\"doctorModel.address.zip\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Zip\\\" required>\\n                  <div *ngIf=\\\"f.submitted  && !zip.valid\\\" class=\\\"help-block\\\">Zip is required</div>\\n                </div>\\n            </div>\\n          </div>\\n          <h6>Accepted Insurance</h6>\\n          <ss-multiselect-dropdown name=\\\"insurace\\\" [options]=\\\"myOptions\\\" [(ngModel)]=\\\"doctorModel.acceptedInsurance\\\" (ngModelChange)=\\\"onChange($event)\\\"></ss-multiselect-dropdown>\\n      \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-md-6\\\"><input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-primary btn-block btn-lg\\\" tabindex=\\\"7\\\"></div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/src/app/doctor-registration/doctor-registration.component.html\n// module id = ../../../../../src/app/doctor-registration/doctor-registration.component.html\n// module chunks = doctor-registration.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Credit to bootsnipp.com for the css for the color graph */\\n.colorgraph {\\n  height: 5px;\\n  border-top: 0;\\n  border-radius: 5px;\\n  background-image: linear-gradient(to right, #c4e17f, #c4e17f 12.5%, #f7fdca 12.5%, #f7fdca 25%, #fecf71 25%, #fecf71 37.5%, #f0776c 37.5%, #f0776c 50%, #db9dbe 50%, #db9dbe 62.5%, #c49cde 62.5%, #c49cde 75%, #669ae1 75%, #669ae1 87.5%, #62c2e4 87.5%, #62c2e4); }\\n\\n.background {\\n  background-image: url(\" + require(\"../../assets/images/Caduceus-On-Blue-Star-Of-Life.png\") + \");\\n  background-repeat: no-repeat;\\n  background-attachment: fixed;\\n  background-position: center;\\n  background-size: auto;\\n  background-size: 145px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/src/app/doctor-registration/doctor-registration.component.scss\n// module id = ../../../../../src/app/doctor-registration/doctor-registration.component.scss\n// module chunks = doctor-registration.module","import { Component, OnInit } from '@angular/core';\nimport { Patient } from '../shared';\nimport { Router } from '@angular/router';\nimport { UserService, InsuranceService, DoctorService } from '../services';\nimport { IMultiSelectOption } from 'angular-2-dropdown-multiselect';\n\n@Component({\n  selector: 'app-doctor-registration',\n  templateUrl: './doctor-registration.component.html',\n  styleUrls: ['./doctor-registration.component.scss']\n})\nexport class DoctorRegistrationComponent implements OnInit {\n\n\n  public submitted = false;\n  public userModel: any = {};\n  public doctorModel: any = {address: {}, acceptedInsurance: [] };\n  public loading = false;\n  public created = false;\n\n  optionsModel: number[];\n  myOptions: IMultiSelectOption[];\n\n\n  public errors = {password: null}\n\n  constructor(public router: Router, private userService: UserService,\n              private doctorService: DoctorService, private insuranceService: InsuranceService) { }\n\n  ngOnInit() {\n\n    this.insuranceService.getAllInsurances()\n      .then( (data: any) => {\n                              this.myOptions = data.insurance;\n                              console.log('options', this.myOptions)\n                              let i = 0;\n                              for (let option of this.myOptions) {\n                                option.id = i;\n                                i++;\n                              }\n                            })\n    \n  }\n\n  onChange() {\n    console.log(this.doctorModel.acceptedInsurance);\n  }\n\n  register() {\n    this.loading = true;\n    console.log('models', this.userModel, this.doctorModel);\n\n    if (this.userModel.password !== this.userModel.passwordConfirmation) {\n      this.errors.password = 'Passwords don\\'t match';\n    } else {\n      console.log('Email',this.userModel.email)\n      this.userService.getUser({email: this.userModel.email})\n        .then((res: any) => {\n          console.log('checking repeats', res);\n          if (!res.success) {\n            this.doctorModel.firstName =  this.userModel.firstName;\n            this.doctorModel.lastName =  this.userModel.lastName;\n            for (let x = 0; x < this.doctorModel.acceptedInsurance.length;  x++) {\n\n            // this.doctorModel.acceptedInsurance[x] = this.myOptions[this.doctorModel.acceptedInsurance[x]]._id\n\n            }\n            this.doctorService.createDoctor(this.doctorModel)\n              .then( (data: any) => {\n                                      this.userModel.doctor = data.doctor._id;\n                                      this.userService.createUser(this.userModel)\n                                      .then((r: any) => {\n                                        console.log('registering', r);\n                                        if (res.success) {\n                                          this.router.navigate(['/login']);\n                                        }\n                                    } );\n              });\n          } else {\n            console.log('Doctor email aready used');\n          }\n        });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/apple/smart-health/src/app/doctor-registration/doctor-registration.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService, InsuranceService, DoctorService } from '../services';\n\nimport { DoctorRegistrationRoutingModule } from './doctor-registration-routing.module';\nimport { DoctorRegistrationComponent } from './doctor-registration.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DoctorRegistrationRoutingModule,\n        FormsModule,\n        NgbModule,\n        MultiselectDropdownModule\n    ],\n    providers: [ UserService, InsuranceService, DoctorService ],\n    declarations: [DoctorRegistrationComponent]\n})\nexport class DoctorRegistrationModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/apple/smart-health/src/app/doctor-registration/doctor-registration.module.ts","module.exports = __webpack_public_path__ + \"Caduceus-On-Blue-Star-Of-Life.d5ccac8d5939fd5ec31f.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/src/assets/images/Caduceus-On-Blue-Star-Of-Life.png\n// module id = ../../../../../src/assets/images/Caduceus-On-Blue-Star-Of-Life.png\n// module chunks = doctor-registration.module","import 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/takeUntil';\nimport { Component, ElementRef, EventEmitter, forwardRef, HostListener, Input, IterableDiffers, Output } from '@angular/core';\nimport { FormBuilder, NG_VALUE_ACCESSOR, } from '@angular/forms';\nimport { Subject } from 'rxjs/Subject';\nimport { MultiSelectSearchFilter } from './search-filter.pipe';\n/*\n * Angular 2 Dropdown Multiselect for Bootstrap\n *\n * Simon Lindh\n * https://github.com/softsimon/angular-2-dropdown-multiselect\n */\nvar MULTISELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MultiselectDropdown; }),\n    multi: true\n};\nvar MultiselectDropdown = (function () {\n    function MultiselectDropdown(element, fb, searchFilter, differs) {\n        this.element = element;\n        this.fb = fb;\n        this.searchFilter = searchFilter;\n        this.filterControl = this.fb.control('');\n        this.disabled = false;\n        this.disabledSelection = false;\n        this.selectionLimitReached = new EventEmitter();\n        this.dropdownClosed = new EventEmitter();\n        this.dropdownOpened = new EventEmitter();\n        this.onAdded = new EventEmitter();\n        this.onRemoved = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onFilter = this.filterControl.valueChanges;\n        this.destroyed$ = new Subject();\n        this.filteredOptions = [];\n        this.lazyLoadOptions = [];\n        this.renderFilteredOptions = [];\n        this.model = [];\n        this.prevModel = [];\n        this.numSelected = 0;\n        this.renderItems = true;\n        this.checkAllSearchRegister = new Set();\n        this.checkAllStatus = false;\n        this.loadedValueIds = [];\n        this.defaultSettings = {\n            closeOnClickOutside: true,\n            pullRight: false,\n            enableSearch: false,\n            searchRenderLimit: 0,\n            searchRenderAfter: 1,\n            searchMaxLimit: 0,\n            searchMaxRenderedItems: 0,\n            checkedStyle: 'checkboxes',\n            buttonClasses: 'btn btn-default btn-secondary',\n            containerClasses: 'dropdown-inline',\n            selectionLimit: 0,\n            minSelectionLimit: 0,\n            closeOnSelect: false,\n            autoUnselect: false,\n            showCheckAll: false,\n            showUncheckAll: false,\n            fixedTitle: false,\n            dynamicTitleMaxItems: 3,\n            maxHeight: '300px',\n            isLazyLoad: false,\n            stopScrollPropagation: false,\n            loadViewDistance: 1,\n            selectAddedValues: false,\n            ignoreLabels: false\n        };\n        this.defaultTexts = {\n            checkAll: 'Check all',\n            uncheckAll: 'Uncheck all',\n            checked: 'checked',\n            checkedPlural: 'checked',\n            searchPlaceholder: 'Search...',\n            searchEmptyResult: 'Nothing found...',\n            searchNoRenderText: 'Type in search box to see results...',\n            defaultTitle: 'Select',\n            allSelected: 'All selected',\n        };\n        this._isVisible = false;\n        this._workerDocClicked = false;\n        this.onModelChange = function (_) { };\n        this.onModelTouched = function () { };\n        this.differ = differs.find([]).create(null);\n        this.settings = this.defaultSettings;\n        this.texts = this.defaultTexts;\n    }\n    MultiselectDropdown.prototype.onClick = function (target) {\n        if (!this.isVisible || !this.settings.closeOnClickOutside)\n            return;\n        var parentFound = false;\n        while (target != null && !parentFound) {\n            if (target === this.element.nativeElement) {\n                parentFound = true;\n            }\n            target = target.parentElement;\n        }\n        if (!parentFound) {\n            this.isVisible = false;\n            this.dropdownClosed.emit();\n        }\n    };\n    Object.defineProperty(MultiselectDropdown.prototype, \"isVisible\", {\n        get: function () {\n            return this._isVisible;\n        },\n        set: function (val) {\n            this._isVisible = val;\n            this._workerDocClicked = val ? false : this._workerDocClicked;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiselectDropdown.prototype, \"searchLimit\", {\n        get: function () {\n            return this.settings.searchRenderLimit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiselectDropdown.prototype, \"searchRenderAfter\", {\n        get: function () {\n            return this.settings.searchRenderAfter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MultiselectDropdown.prototype, \"searchLimitApplied\", {\n        get: function () {\n            return this.searchLimit > 0 && this.options.length > this.searchLimit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MultiselectDropdown.prototype.getItemStyle = function (option) {\n        if (!option.isLabel) {\n            return { 'cursor': 'pointer' };\n        }\n    };\n    MultiselectDropdown.prototype.getItemStyleSelectionDisabled = function () {\n        if (this.disabledSelection) {\n            return { 'cursor': 'default' };\n        }\n    };\n    MultiselectDropdown.prototype.ngOnInit = function () {\n        this.settings = Object.assign(this.defaultSettings, this.settings);\n        this.texts = Object.assign(this.defaultTexts, this.texts);\n        this.title = this.texts.defaultTitle || '';\n        this.filterControl.valueChanges\n            .takeUntil(this.destroyed$)\n            .subscribe(function () {\n            this.updateRenderItems();\n            if (this.settings.isLazyLoad) {\n                this.load();\n            }\n        }.bind(this));\n    };\n    MultiselectDropdown.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (changes['options']) {\n            this.options = this.options || [];\n            this.parents = this.options\n                .filter(function (option) { return typeof option.parentId === 'number'; })\n                .map(function (option) { return option.parentId; });\n            this.updateRenderItems();\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues && this.loadedValueIds.length === 0) {\n                this.loadedValueIds = this.loadedValueIds.concat(changes.options.currentValue.map(function (value) { return value.id; }));\n            }\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues && changes.options.previousValue) {\n                var addedValues_1 = changes.options.currentValue.filter(function (value) { return _this.loadedValueIds.indexOf(value.id) === -1; });\n                this.loadedValueIds.concat(addedValues_1.map(function (value) { return value.id; }));\n                if (this.checkAllStatus) {\n                    this.addChecks(addedValues_1);\n                }\n                else if (this.checkAllSearchRegister.size > 0) {\n                    this.checkAllSearchRegister.forEach(function (searchValue) { return _this.addChecks(_this.applyFilters(addedValues_1, searchValue)); });\n                }\n            }\n            if (this.texts) {\n                this.updateTitle();\n            }\n            this.fireModelChange();\n        }\n        if (changes['texts'] && !changes['texts'].isFirstChange()) {\n            this.updateTitle();\n        }\n    };\n    MultiselectDropdown.prototype.ngOnDestroy = function () {\n        this.destroyed$.next();\n    };\n    MultiselectDropdown.prototype.updateRenderItems = function () {\n        this.renderItems = !this.searchLimitApplied || this.filterControl.value.length >= this.searchRenderAfter;\n        this.filteredOptions = this.applyFilters(this.options, this.settings.isLazyLoad ? '' : this.filterControl.value);\n        this.renderFilteredOptions = this.renderItems ? this.filteredOptions : [];\n    };\n    MultiselectDropdown.prototype.applyFilters = function (options, value) {\n        return (this.searchFilter.transform(options, value, this.settings.searchMaxLimit, this.settings.searchMaxRenderedItems));\n    };\n    MultiselectDropdown.prototype.fireModelChange = function () {\n        if (this.model != this.prevModel) {\n            this.prevModel = this.model;\n            this.onModelChange(this.model);\n            this.onModelTouched();\n        }\n    };\n    MultiselectDropdown.prototype.writeValue = function (value) {\n        if (value !== undefined && value !== null) {\n            this.model = Array.isArray(value) ? value : [value];\n        }\n        else {\n            this.model = [];\n        }\n    };\n    MultiselectDropdown.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    MultiselectDropdown.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    MultiselectDropdown.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    MultiselectDropdown.prototype.ngDoCheck = function () {\n        var changes = this.differ.diff(this.model);\n        if (changes) {\n            this.updateNumSelected();\n            this.updateTitle();\n        }\n    };\n    MultiselectDropdown.prototype.validate = function (_c) {\n        return (this.model && this.model.length) ? null : {\n            required: {\n                valid: false,\n            },\n        };\n    };\n    MultiselectDropdown.prototype.registerOnValidatorChange = function (_fn) {\n        throw new Error('Method not implemented.');\n    };\n    MultiselectDropdown.prototype.clearSearch = function (event) {\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n        this.filterControl.setValue('');\n    };\n    MultiselectDropdown.prototype.toggleDropdown = function () {\n        this.isVisible = !this.isVisible;\n        this.isVisible ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    };\n    MultiselectDropdown.prototype.isSelected = function (option) {\n        return this.model && this.model.indexOf(option.id) > -1;\n    };\n    MultiselectDropdown.prototype.setSelected = function (_event, option) {\n        var _this = this;\n        if (option.isLabel) {\n            return;\n        }\n        if (!this.disabledSelection) {\n            if (_event.stopPropagation) {\n                _event.stopPropagation();\n            }\n            var index = this.model.indexOf(option.id);\n            var isAtSelectionLimit = this.settings.selectionLimit > 0 && this.model.length >= this.settings.selectionLimit;\n            var removeItem_1 = function (idx, id) {\n                _this.model.splice(idx, 1);\n                _this.onRemoved.emit(id);\n                if (_this.settings.isLazyLoad && _this.lazyLoadOptions.some(function (val) { return val.id === id; })) {\n                    _this.lazyLoadOptions.splice(_this.lazyLoadOptions.indexOf(_this.lazyLoadOptions.find(function (val) { return val.id === id; })), 1);\n                }\n            };\n            if (index > -1) {\n                if ((this.settings.minSelectionLimit === undefined) || (this.numSelected > this.settings.minSelectionLimit)) {\n                    removeItem_1(index, option.id);\n                }\n                var parentIndex = option.parentId && this.model.indexOf(option.parentId);\n                if (parentIndex > -1) {\n                    removeItem_1(parentIndex, option.parentId);\n                }\n                else if (this.parents.indexOf(option.id) > -1) {\n                    this.options.filter(function (child) { return _this.model.indexOf(child.id) > -1 && child.parentId === option.id; })\n                        .forEach(function (child) { return removeItem_1(_this.model.indexOf(child.id), child.id); });\n                }\n            }\n            else if (isAtSelectionLimit && !this.settings.autoUnselect) {\n                this.selectionLimitReached.emit(this.model.length);\n                return;\n            }\n            else {\n                var addItem_1 = function (id) {\n                    _this.model.push(id);\n                    _this.onAdded.emit(id);\n                    if (_this.settings.isLazyLoad && !_this.lazyLoadOptions.some(function (val) { return val.id === id; })) {\n                        _this.lazyLoadOptions.push(option);\n                    }\n                };\n                addItem_1(option.id);\n                if (!isAtSelectionLimit) {\n                    if (option.parentId && !this.settings.ignoreLabels) {\n                        var children = this.options.filter(function (child) { return child.id !== option.id && child.parentId === option.parentId; });\n                        if (children.every(function (child) { return _this.model.indexOf(child.id) > -1; })) {\n                            addItem_1(option.parentId);\n                        }\n                    }\n                    else if (this.parents.indexOf(option.id) > -1) {\n                        var children = this.options.filter(function (child) { return _this.model.indexOf(child.id) < 0 && child.parentId === option.id; });\n                        children.forEach(function (child) { return addItem_1(child.id); });\n                    }\n                }\n                else {\n                    removeItem_1(0, this.model[0]);\n                }\n            }\n            if (this.settings.closeOnSelect) {\n                this.toggleDropdown();\n            }\n            this.model = this.model.slice();\n            this.fireModelChange();\n        }\n    };\n    MultiselectDropdown.prototype.updateNumSelected = function () {\n        var _this = this;\n        this.numSelected = this.model.filter(function (id) { return _this.parents.indexOf(id) < 0; }).length || 0;\n    };\n    MultiselectDropdown.prototype.updateTitle = function () {\n        var _this = this;\n        var numSelectedOptions = this.options.length;\n        if (this.settings.ignoreLabels) {\n            numSelectedOptions = this.options.filter(function (option) { return !option.isLabel; }).length;\n        }\n        if (this.numSelected === 0 || this.settings.fixedTitle) {\n            this.title = (this.texts) ? this.texts.defaultTitle : '';\n        }\n        else if (this.settings.displayAllSelectedText && this.model.length === numSelectedOptions) {\n            this.title = (this.texts) ? this.texts.allSelected : '';\n        }\n        else if (this.settings.dynamicTitleMaxItems && this.settings.dynamicTitleMaxItems >= this.numSelected) {\n            var useOptions = this.settings.isLazyLoad && this.lazyLoadOptions ? this.lazyLoadOptions : this.options;\n            this.title = useOptions\n                .filter(function (option) {\n                return _this.model.indexOf(option.id) > -1;\n            })\n                .map(function (option) { return option.name; })\n                .join(', ');\n        }\n        else {\n            this.title = this.numSelected\n                + ' '\n                + (this.numSelected === 1 ? this.texts.checked : this.texts.checkedPlural);\n        }\n    };\n    MultiselectDropdown.prototype.searchFilterApplied = function () {\n        return this.settings.enableSearch && this.filterControl.value && this.filterControl.value.length > 0;\n    };\n    MultiselectDropdown.prototype.addChecks = function (options) {\n        var checkedOptions = options\n            .filter(function (option) {\n            if (this.model.indexOf(option.id) === -1 && !(this.settings.ignoreLabels && option.isLabel)) {\n                this.onAdded.emit(option.id);\n                return true;\n            }\n            return false;\n        }.bind(this)).map(function (option) { return option.id; });\n        this.model = this.model.concat(checkedOptions);\n    };\n    MultiselectDropdown.prototype.checkAll = function () {\n        if (!this.disabledSelection) {\n            this.addChecks(!this.searchFilterApplied() ? this.options : this.filteredOptions);\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues) {\n                if (this.searchFilterApplied() && !this.checkAllStatus) {\n                    this.checkAllSearchRegister.add(this.filterControl.value);\n                }\n                else {\n                    this.checkAllSearchRegister.clear();\n                    this.checkAllStatus = true;\n                }\n                this.load();\n            }\n            this.fireModelChange();\n        }\n    };\n    MultiselectDropdown.prototype.uncheckAll = function () {\n        var _this = this;\n        if (!this.disabledSelection) {\n            var checkedOptions = this.model;\n            var unCheckedOptions_1 = (!this.searchFilterApplied() ? this.model\n                : this.filteredOptions.map(function (option) { return option.id; }));\n            // set unchecked options only to the ones that were checked\n            unCheckedOptions_1 = checkedOptions.filter(function (item) { return _this.model.includes(item); });\n            this.model = this.model.filter(function (id) {\n                if (((unCheckedOptions_1.indexOf(id) < 0) && (_this.settings.minSelectionLimit === undefined)) || ((unCheckedOptions_1.indexOf(id) < _this.settings.minSelectionLimit))) {\n                    return true;\n                }\n                else {\n                    _this.onRemoved.emit(id);\n                    return false;\n                }\n            });\n            if (this.settings.isLazyLoad && this.settings.selectAddedValues) {\n                if (this.searchFilterApplied()) {\n                    if (this.checkAllSearchRegister.has(this.filterControl.value)) {\n                        this.checkAllSearchRegister.delete(this.filterControl.value);\n                        this.checkAllSearchRegister.forEach(function (searchTerm) {\n                            var filterOptions = this.applyFilters(this.options.filter(function (option) { return unCheckedOptions_1.includes(option.id); }), searchTerm);\n                            this.addChecks(filterOptions);\n                        }.bind(this));\n                    }\n                }\n                else {\n                    this.checkAllSearchRegister.clear();\n                    this.checkAllStatus = false;\n                }\n                this.load();\n            }\n            this.fireModelChange();\n        }\n    };\n    MultiselectDropdown.prototype.preventCheckboxCheck = function (event, option) {\n        if (this.settings.selectionLimit && !this.settings.autoUnselect &&\n            this.model.length >= this.settings.selectionLimit &&\n            this.model.indexOf(option.id) === -1 &&\n            event.preventDefault) {\n            event.preventDefault();\n        }\n    };\n    MultiselectDropdown.prototype.isCheckboxDisabled = function () {\n        return this.disabledSelection;\n    };\n    MultiselectDropdown.prototype.checkScrollPosition = function (ev) {\n        var scrollTop = ev.target.scrollTop;\n        var scrollHeight = ev.target.scrollHeight;\n        var scrollElementHeight = ev.target.clientHeight;\n        var roundingPixel = 1;\n        var gutterPixel = 1;\n        if (scrollTop >= scrollHeight - (1 + this.settings.loadViewDistance) * scrollElementHeight - roundingPixel - gutterPixel) {\n            this.load();\n        }\n    };\n    MultiselectDropdown.prototype.checkScrollPropagation = function (ev, element) {\n        var scrollTop = element.scrollTop;\n        var scrollHeight = element.scrollHeight;\n        var scrollElementHeight = element.clientHeight;\n        if ((ev.deltaY > 0 && scrollTop + scrollElementHeight >= scrollHeight) || (ev.deltaY < 0 && scrollTop <= 0)) {\n            ev = ev || window.event;\n            ev.preventDefault && ev.preventDefault();\n            ev.returnValue = false;\n        }\n    };\n    MultiselectDropdown.prototype.load = function () {\n        this.onLazyLoad.emit({\n            length: this.options.length,\n            filter: this.filterControl.value,\n            checkAllSearches: this.checkAllSearchRegister,\n            checkAllStatus: this.checkAllStatus\n        });\n    };\n    return MultiselectDropdown;\n}());\nexport { MultiselectDropdown };\nMultiselectDropdown.decorators = [\n    { type: Component, args: [{\n                selector: 'ss-multiselect-dropdown',\n                template: '<div class=\"dropdown\" [ngClass]=\"settings.containerClasses\" [class.open]=\"isVisible\"><button type=\"button\" class=\"dropdown-toggle\" [ngClass]=\"settings.buttonClasses\" (click)=\"toggleDropdown()\" [disabled]=\"disabled\">{{ title }}<span class=\"caret\"></span></button><ul #scroller *ngIf=\"isVisible\" class=\"dropdown-menu\" (scroll)=\"settings.isLazyLoad ? checkScrollPosition($event) : null\" (wheel)=\"settings.stopScrollPropagation ? checkScrollPropagation($event, scroller) : null\" [class.pull-right]=\"settings.pullRight\" [class.dropdown-menu-right]=\"settings.pullRight\" [style.max-height]=\"settings.maxHeight\" style=\"display: block; height: auto; overflow-y: auto\"><li class=\"dropdown-item search\" *ngIf=\"settings.enableSearch\"><div class=\"input-group input-group-sm\"><span class=\"input-group-addon\" id=\"sizing-addon3\"><i class=\"fa fa-search\"></i></span> <input type=\"text\" class=\"form-control\" placeholder=\"{{ texts.searchPlaceholder }}\" aria-describedby=\"sizing-addon3\" [formControl]=\"filterControl\" autofocus> <span class=\"input-group-btn\" *ngIf=\"filterControl.value.length > 0\"><button class=\"btn btn-default btn-secondary\" type=\"button\" (click)=\"clearSearch($event)\"><i class=\"fa fa-times\"></i></button></span></div></li><li class=\"dropdown-divider divider\" *ngIf=\"settings.enableSearch\"></li><li class=\"dropdown-item check-control check-control-check\" *ngIf=\"settings.showCheckAll && !disabledSelection\" (click)=\"checkAll()\"><a href=\"javascript:;\" role=\"menuitem\" tabindex=\"-1\"><span style=\"width: 16px\" [ngClass]=\"{\\'glyphicon glyphicon-ok\\': settings.checkedStyle !== \\'fontawesome\\',\\'fa fa-check\\': settings.checkedStyle === \\'fontawesome\\'}\"></span> {{ texts.checkAll }}</a></li><li class=\"dropdown-item check-control check-control-uncheck\" *ngIf=\"settings.showUncheckAll && !disabledSelection\" (click)=\"uncheckAll()\"><a href=\"javascript:;\" role=\"menuitem\" tabindex=\"-1\"><span style=\"width: 16px\" [ngClass]=\"{\\'glyphicon glyphicon-remove\\': settings.checkedStyle !== \\'fontawesome\\',\\'fa fa-times\\': settings.checkedStyle === \\'fontawesome\\'}\"></span> {{ texts.uncheckAll }}</a></li><li *ngIf=\"settings.showCheckAll || settings.showUncheckAll\" class=\"dropdown-divider divider\"></li><li *ngIf=\"!renderItems\" class=\"dropdown-item empty\">{{ texts.searchNoRenderText }}</li><li *ngIf=\"renderItems && !renderFilteredOptions.length\" class=\"dropdown-item empty\">{{ texts.searchEmptyResult }}</li><li class=\"dropdown-item\" *ngFor=\"let option of renderFilteredOptions\" (click)=\"setSelected($event, option)\" [ngStyle]=\"getItemStyle(option)\" [ngClass]=\"option.classes\" [class.dropdown-header]=\"option.isLabel\"><a *ngIf=\"!option.isLabel; else label\" href=\"javascript:;\" role=\"menuitem\" tabindex=\"-1\" [style.padding-left]=\"this.parents.length>0&&this.parents.indexOf(option.id)<0&&\\'30px\\'\" [ngStyle]=\"getItemStyleSelectionDisabled()\"><ng-container [ngSwitch]=\"settings.checkedStyle\"><input *ngSwitchCase=\"\\'checkboxes\\'\" type=\"checkbox\" [checked]=\"isSelected(option)\" (click)=\"preventCheckboxCheck($event, option)\" [disabled]=\"isCheckboxDisabled()\" [ngStyle]=\"getItemStyleSelectionDisabled()\" > <span *ngSwitchCase=\"\\'glyphicon\\'\" style=\"width: 16px\" class=\"glyphicon\" [class.glyphicon-ok]=\"isSelected(option)\"></span> <span *ngSwitchCase=\"\\'fontawesome\\'\" style=\"width: 16px;display: inline-block\"><i *ngIf=\"isSelected(option)\" class=\"fa fa-check\" aria-hidden=\"true\"></i></span></ng-container><span [ngClass]=\"settings.itemClasses\" [style.font-weight]=\"this.parents.indexOf(option.id)>=0?\\'bold\\':\\'normal\\'\">{{ option.name }}</span></a><ng-template #label>{{ option.name }}</ng-template></li></ul></div>',\n                styles: ['a {  outline: none !important;}.dropdown-inline {  display: inline-block;}.dropdown-toggle .caret {  margin-left: 4px;  white-space: nowrap;  display: inline-block;}'],\n                providers: [MULTISELECT_VALUE_ACCESSOR, MultiSelectSearchFilter]\n            },] },\n];\n/** @nocollapse */\nMultiselectDropdown.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: FormBuilder, },\n    { type: MultiSelectSearchFilter, },\n    { type: IterableDiffers, },\n]; };\nMultiselectDropdown.propDecorators = {\n    'options': [{ type: Input },],\n    'settings': [{ type: Input },],\n    'texts': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'disabledSelection': [{ type: Input },],\n    'selectionLimitReached': [{ type: Output },],\n    'dropdownClosed': [{ type: Output },],\n    'dropdownOpened': [{ type: Output },],\n    'onAdded': [{ type: Output },],\n    'onRemoved': [{ type: Output },],\n    'onLazyLoad': [{ type: Output },],\n    'onFilter': [{ type: Output },],\n    'onClick': [{ type: HostListener, args: ['document: click', ['$event.target'],] }, { type: HostListener, args: ['document: touchstart', ['$event.target'],] },],\n};\n//# sourceMappingURL=dropdown.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.component.js\n// module id = ../../../../angular-2-dropdown-multiselect/dropdown/dropdown.component.js\n// module chunks = doctor-registration.module","import { MultiselectDropdown } from './dropdown.component';\nimport { MultiSelectSearchFilter } from './search-filter.pipe';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nvar MultiselectDropdownModule = (function () {\n    function MultiselectDropdownModule() {\n    }\n    return MultiselectDropdownModule;\n}());\nexport { MultiselectDropdownModule };\nMultiselectDropdownModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, ReactiveFormsModule],\n                exports: [MultiselectDropdown, MultiSelectSearchFilter],\n                declarations: [MultiselectDropdown, MultiSelectSearchFilter],\n            },] },\n];\n/** @nocollapse */\nMultiselectDropdownModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=dropdown.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/dropdown.module.js\n// module id = ../../../../angular-2-dropdown-multiselect/dropdown/dropdown.module.js\n// module chunks = doctor-registration.module","import { Pipe } from '@angular/core';\nvar MultiSelectSearchFilter = (function () {\n    function MultiSelectSearchFilter() {\n        this._searchCache = {};\n        this._searchCacheInclusive = {};\n    }\n    MultiSelectSearchFilter.prototype.transform = function (options, str, limit, renderLimit) {\n        if (limit === void 0) { limit = 0; }\n        if (renderLimit === void 0) { renderLimit = 0; }\n        str = (str || '').toLowerCase();\n        // Drop cache because options were updated\n        if (options !== this._lastOptions) {\n            this._lastOptions = options;\n            this._searchCache = {};\n            this._searchCacheInclusive = {};\n        }\n        var isUnderLimit = options.length <= limit;\n        if (this._searchCache.hasOwnProperty(str)) {\n            return isUnderLimit ? this._searchCache[str] : this._limitRenderedItems(this._searchCache[str], renderLimit);\n        }\n        var prevStr = str.slice(0, -1);\n        var prevResults = this._searchCache[prevStr];\n        if (prevResults) {\n            var prevInclusiveOrIdx = this._searchCacheInclusive[prevStr];\n            if (prevInclusiveOrIdx === true) {\n                // If have previous results and it was inclusive, do only subsearch\n                options = prevResults;\n            }\n            else if (typeof prevInclusiveOrIdx === 'number') {\n                // Or reuse prev results with unchecked ones\n                options = prevResults.concat(options.slice(prevInclusiveOrIdx));\n            }\n        }\n        var optsLength = options.length;\n        var maxFound = limit > 0 ? Math.min(limit, optsLength) : optsLength;\n        var filteredOpts = [];\n        var regexp = new RegExp(this._escapeRegExp(str), 'i');\n        var matchPredicate = function (option) { return regexp.test(option.name); }, getChildren = function (option) { return options.filter(function (child) { return child.parentId === option.id; }); }, getParent = function (option) { return options.find(function (parent) { return option.parentId === parent.id; }); };\n        var i = 0, founded = 0;\n        for (; i < optsLength && founded < maxFound; ++i) {\n            var option = options[i];\n            var directMatch = regexp.test(option.name);\n            if (directMatch) {\n                filteredOpts.push(option);\n                founded++;\n                continue;\n            }\n            if (typeof (option.parentId) === 'undefined') {\n                var childrenMatch = getChildren(option).some(matchPredicate);\n                if (childrenMatch) {\n                    filteredOpts.push(option);\n                    founded++;\n                    continue;\n                }\n            }\n            if (typeof (option.parentId) !== 'undefined') {\n                var parentMatch = matchPredicate(getParent(option));\n                if (parentMatch) {\n                    filteredOpts.push(option);\n                    founded++;\n                    continue;\n                }\n            }\n        }\n        this._searchCache[str] = filteredOpts;\n        this._searchCacheInclusive[str] = i === optsLength || i + 1;\n        return isUnderLimit ? filteredOpts : this._limitRenderedItems(filteredOpts, renderLimit);\n    };\n    MultiSelectSearchFilter.prototype._limitRenderedItems = function (items, limit) {\n        return items.length > limit && limit > 0 ? items.slice(0, limit) : items;\n    };\n    MultiSelectSearchFilter.prototype._escapeRegExp = function (str) {\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n    };\n    return MultiSelectSearchFilter;\n}());\nexport { MultiSelectSearchFilter };\nMultiSelectSearchFilter.decorators = [\n    { type: Pipe, args: [{\n                name: 'searchFilter'\n            },] },\n];\n/** @nocollapse */\nMultiSelectSearchFilter.ctorParameters = function () { return []; };\n//# sourceMappingURL=search-filter.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/dropdown/search-filter.pipe.js\n// module id = ../../../../angular-2-dropdown-multiselect/dropdown/search-filter.pipe.js\n// module chunks = doctor-registration.module","export * from './dropdown/search-filter.pipe';\nexport * from './dropdown/dropdown.module';\nexport * from './dropdown/dropdown.component';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/apple/smart-health/node_modules/angular-2-dropdown-multiselect/index.js\n// module id = ../../../../angular-2-dropdown-multiselect/index.js\n// module chunks = doctor-registration.module"],"sourceRoot":"webpack:///"}
>>>>>>> f8db49593dfed046545d28d0fe72e66de99b906e
