{"version":3,"sources":["/home/hunter/Documents/smart-health/src/app/registration/registration-routing.module.ts","/home/hunter/Documents/smart-health/src/app/registration/registration.component.html","/home/hunter/Documents/smart-health/src/app/registration/registration.component.scss","/home/hunter/Documents/smart-health/src/app/registration/registration.component.ts","/home/hunter/Documents/smart-health/src/app/registration/registration.module.ts"],"names":[],"mappings":"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","file":"registration.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistrationComponent } from './registration.component';\n\nconst routes: Routes = [\n    { path: '', component: RegistrationComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegistrationRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/hunter/Documents/smart-health/src/app/registration/registration-routing.module.ts","module.exports = \"<div class=\\\"container registration-page\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-sm-8 col-md-8 mx-auto pt-4\\\">\\n      <h3>Patient Registration</h3>\\n      <form name=\\\"form\\\" #f=\\\"ngForm\\\"  (ngSubmit)=\\\"patientModel.health.sex != null && register()\\\"   novalidate >\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" name=\\\"firstName\\\" id=\\\"firstName\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"userModel.firstName\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"First Name\\\" required>\\n              <div *ngIf=\\\"f.submitted  && !firstName.valid\\\" class=\\\"help-block\\\">First Name is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" name=\\\"lastName\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"userModel.lastName\\\" #lastName =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Last Name\\\" required>\\n              <div *ngIf=\\\"f.submitted && !lastName.valid\\\" class=\\\"help-block\\\">Last Name is required</div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"userModel.email\\\" #email =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Email\\\" tabindex=\\\"1\\\" required>\\n            <div *ngIf=\\\"f.submitted && !email.valid\\\" class=\\\"help-block\\\">Email is required</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"userModel.password\\\" #password =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Password\\\" tabindex=\\\"1\\\" required>\\n                <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" name=\\\"passwordConfirmation\\\" id=\\\"passwordConfirmation\\\" [(ngModel)]=\\\"userModel.passwordConfirmation\\\" #passwordConfirmation =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm Password\\\" tabindex=\\\"1\\\" required>\\n                <div *ngIf=\\\"f.submitted && !passwordConfirmation.valid\\\" class=\\\"help-block\\\">Password Confirmation is required</div>\\n            </div>\\n            <div class=\\\"alert alert-danger w-100\\\" *ngIf = \\\"errors.password !== null\\\">{{errors.password}}</div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"Number\\\" name=\\\"height\\\" id=\\\"height\\\" [(ngModel)]=\\\"patientModel.health.height\\\" #height =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Height\\\" tabindex=\\\"1\\\" required>\\n              <div *ngIf=\\\"f.submitted && !height.valid\\\" class=\\\"help-block\\\">Height is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"Number\\\" name=\\\"weight\\\" id=\\\"weight\\\" [(ngModel)]=\\\"patientModel.health.weight\\\" #weight =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Weight\\\" tabindex=\\\"1\\\" required>\\n              <div *ngIf=\\\"f.submitted && !weight.valid\\\" class=\\\"help-block\\\">Height is required</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"Number\\\" step=\\\"1\\\" name=\\\"age\\\" id=\\\"age\\\" [(ngModel)]=\\\"patientModel.health.age\\\" #age =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Age\\\" tabindex=\\\"1\\\" required>\\n              <div *ngIf=\\\"f.submitted && !age.valid\\\" class=\\\"help-block\\\">Age is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6 col-sm-6 col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n                <div *ngFor=\\\"let gender of genders\\\">\\n                    <input type=\\\"radio\\\" name=\\\"gender\\\" (change)=\\\"patientModel.health.sex = gender\\\" [value]=\\\"gender\\\">\\n                    {{gender}}\\n                </div>\\n                <div *ngIf=\\\"f.submitted && patientModel.health.sex == null\\\" class=\\\"help-block\\\">Gender is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6 col-sm-6 col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"bloodType\\\">Blood Type:</label>\\n              <select [(ngModel)]=\\\"patientModel.health.bloodType\\\" name=\\\"bloodType\\\" #blood=\\\"ngModel\\\">\\n                <option *ngFor=\\\"let type of bloodTypes\\\" [ngValue]=\\\"type\\\">{{type}}</option>\\n              </select> \\n              <div *ngIf=\\\"f.submitted && !blood.valid\\\" class=\\\"help-block\\\">Blood Type is required</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">  \\n          <div class=\\\"col-xs-12 col-sm-3 col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"insurance\\\">Insurances:</label>\\n              <select [(ngModel)]=\\\"patientModel.insurance\\\" name=\\\"insurance\\\" #insurance=\\\"ngModel\\\">\\n                <option *ngFor=\\\"let insurance of insurances\\\" [ngValue]=\\\"insurance._id\\\">{{insurance.name}}</option>\\n              </select> \\n              <div *ngIf=\\\"f.submitted && !insurance.valid\\\" class=\\\"help-block\\\">Insurance is required</div>\\n            </div>\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"medication\\\">Medications:</label>\\n                <div class=\\\"badge badge-pill badge-primary\\\" *ngFor=\\\"let med of patientModel.health.medication\\\">{{med}}</div>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" name=\\\"newMed\\\" id=\\\"newMed\\\" [(ngModel)]=\\\"newData.med\\\" #newMed =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Medication Name\\\" tabindex=\\\"1\\\" required>\\n                    <div class=\\\"btn btn-success\\\" type=\\\"button\\\" (click) = \\\"addMed()\\\">+Add</div>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"allergies\\\">Allergies:</label>\\n                <div class=\\\"badge badge-pill badge-warning\\\" *ngFor=\\\"let al of patientModel.health.allergies\\\">{{al}}</div>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" name=\\\"newAl\\\" id=\\\"newAl\\\" [(ngModel)]=\\\"newData.al\\\" #newAl =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Allergy Name\\\" tabindex=\\\"1\\\" required>\\n                    <div class=\\\"btn btn-success\\\" type=\\\"button\\\" (click) = \\\"addAl()\\\">+Add</div>\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"medication\\\">Conditions:</label>\\n                <div class=\\\"badge badge-pill badge-danger\\\" *ngFor=\\\"let al of patientModel.health.conditions\\\">{{al}}</div>\\n                <div class=\\\"d-flex\\\">\\n                    <input type=\\\"text\\\" name=\\\"newCon\\\" id=\\\"newCon\\\" [(ngModel)]=\\\"newData.con\\\" #newCon =\\\"ngModel\\\" class=\\\"form-control input-lg\\\" placeholder=\\\"Medication Name\\\" tabindex=\\\"1\\\" required>\\n                    <div class=\\\"btn btn-success\\\" type=\\\"button\\\" (click) = \\\"addCon()\\\">+Add</div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-md-6\\\"><input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn rounded-btn\\\" tabindex=\\\"7\\\"></div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/src/app/registration/registration.component.html\n// module id = ../../../../../src/app/registration/registration.component.html\n// module chunks = registration.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\n  display: block; }\\n\\n.registration-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  background: #222;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n  .registration-page .col-lg-4 {\\n    padding: 0; }\\n  .registration-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n  .registration-page .input-underline {\\n    background: 0 0;\\n    border: none;\\n    box-shadow: none;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\\n    color: #FFF;\\n    border-radius: 0; }\\n  .registration-page .input-underline:focus {\\n    border-bottom: 2px solid #fff;\\n    box-shadow: none; }\\n  .registration-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: #222;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px;\\n    margin-bottom: 5px; }\\n  .registration-page .rounded-btn:hover, .registration-page .rounded-btn:focus, .registration-page .rounded-btn:active, .registration-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n  .registration-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n    .registration-page h1 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n  .registration-page .form-group {\\n    padding: 8px 0; }\\n    .registration-page .form-group input::-webkit-input-placeholder {\\n      color: black !important; }\\n    .registration-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n    .registration-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n    .registration-page .form-group input:-ms-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n  .registration-page .form-content {\\n    padding: 40px 0; }\\n  .registration-page .user-avatar {\\n    border-radius: 50%;\\n    border: 2px solid #FFF; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hunter/Documents/smart-health/src/app/registration/registration.component.scss\n// module id = ../../../../../src/app/registration/registration.component.scss\n// module chunks = registration.module","import { Component, OnInit } from '@angular/core';\nimport { User, Patient } from '../shared';\nimport { Router } from '@angular/router';\nimport { UserService, PatientService, HealthService, InsuranceService } from '../services';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n\n  public userModel: any = {};\n  public patientModel: any = { insurance: null, health: {conditions: [], allergies: [], medication: []} };\n  public loading = false;\n  public created = false;\n  public bloodTypes = ['O', 'A', 'B', 'AB', 'O+', 'O-', 'A+', 'A-', 'B+', 'B-', 'AB+', 'AB-'];\n  public newData = {med: '', al: '', con: ''} ;\n  public genders = ['Male', 'Female']\n  public newAl;\n  public newCon;\n  public errors = {password: null}\n   public insurances= [];\n\n  constructor(public router: Router,\n              private userService: UserService,\n              private patientService: PatientService,\n              private healthService: HealthService,\n              private insuranceService: InsuranceService) {\n                this.insuranceService.getAllInsurances()\n                  .then ( (data: any) => {this.insurances = data.insurance; console.log(this.insurances)} )\n               }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.loading = true;\n    console.log('Registering')\n    console.log(this.userModel, this.patientModel);\n\n    if (this.userModel.password !== this.userModel.passwordConfirmation) {\n      this.errors.password = 'Passwords don\\'t match';\n    } else {\n      console.log(\"Email\",this.userModel.email)\n      this.userService.getUser({email: this.userModel.email})\n        .then((res: any) => {\n          console.log('checking repeats', res);\n          if (!res.success) {\n            this.patientModel.firstName = this.userModel.firstName;\n            this.patientModel.lastName = this.userModel.lastName;\n\n            this.healthService.createHealth(this.patientModel.health)\n              .then( (data: any) => {\n                                      this.patientModel.health = data.health._id\n                                      console.log(this.patientModel)\n                                      this.patientService.createPatient(this.patientModel)\n                                        .then( (patient: any) => {\n                                          this.userModel.patient = patient.patient._id;\n                                          this.userService.createUser(this.userModel)\n                                          .then((r: any) => {\n                                            console.log('registering', r);\n                                            if (data.success) {\n                                              this.router.navigate(['/login']);\n                                            }\n                                          });\n                                        })\n                                    });\n          } else {\n            console.log('Patient email aready used');\n          }\n        });\n    }\n  }\n\n  addMed() {\n    this.patientModel.health.medication.push(this.newData.med)\n    this.newData.med = '';\n  }\n\n  addAl() {\n    this.patientModel.health.allergies.push(this.newData.al)\n    this.newData.al = '';\n  }\n\n  addCon() {\n    this.patientModel.health.conditions.push(this.newData.con)\n    this.newData.con = '';\n  }\n\n  print() {\n    console.log(this.userModel, this.patientModel)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hunter/Documents/smart-health/src/app/registration/registration.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserService, PatientService, HealthService, InsuranceService } from '../services';\n\nimport { RegistrationRoutingModule } from './registration-routing.module';\nimport { RegistrationComponent } from './registration.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RegistrationRoutingModule,\n        FormsModule,\n        NgbModule\n    ],\n    providers: [ UserService, PatientService, HealthService, InsuranceService ],\n    declarations: [RegistrationComponent]\n})\nexport class RegistrationModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hunter/Documents/smart-health/src/app/registration/registration.module.ts"],"sourceRoot":"webpack:///"}